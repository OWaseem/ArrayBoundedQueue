import java.util.*;
public class ArrayBoundedQueueTestDrive {

	public static void main(String[] args) {
		
		int element;
		
		QueueInterface<String> testDrive = new ArrayBoundedQueue<String>();
		
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the desired action:\n"
				+ "1: ArrayBoundedQueue()" + "\n" + "2: ArrayBoundedQueue(int maxSize)");
		int action = sc.nextInt();
		sc.nextLine();
		
		switch(action)
		{
			case 1:
				testDrive = new ArrayBoundedQueue<String>();
				break;
			case 2:
				System.out.println("Enter a maximum size for the queue: ");
				int maxSize = sc.nextInt();
				testDrive = new ArrayBoundedQueue<String>(maxSize);
				break;
		}
		
		boolean testing = true;
		
		while(testing)
		{
			System.out.println("Choose an operation to handle: "
								+ "\n1: enqueue(element)"
								+ "\n2: String dequeue()"
								+ "\n3: boolean isFull()"
								+ "\n4: boolean isEmpty()"
								+ "\n5: int size()"
								+ "\n6: String toString()"
								+ "\n7: int space()"
								+ "\n8: remove(count)"
								+ "\n9: boolean swapStart()"
								+ "\n10: boolean swapEnds()"
								+ "\n11: End Operation");
			
			int operation = sc.nextInt();
			
			switch(operation)
			{
				case 1:
					System.out.println("Enter a string to enqueue");
					String enqueue = sc.next();
					System.out.println("enqueue(\"" + enqueue + "\")");
					try
					{
					testDrive.enqueue(enqueue);
					}
					catch (QueueOverflowException E)
					{
					System.out.println("Overflow Exception: " + E.getMessage());
					}
					break;
					
				case 2:
					System.out.println("dequeue()");
					try
					{
					testDrive.dequeue();
					}
					catch (QueueUnderflowException E)
					{
					System.out.println("Underflow Exception: " + E.getMessage());
					}
					break;
				
				case 3:
					System.out.println("isFull()");
					System.out.println(testDrive.isFull());
					break;
					
				case 4:
					System.out.println("isEmpty()");
					System.out.println(testDrive.isEmpty());
					break;
					
				case 5:
					System.out.println("size()");
					System.out.println(testDrive.size());
					break;
					
				case 6:
					System.out.println("toString()");
					System.out.println(testDrive.toString());
					break;
					
				case 7:
					System.out.println("space()");
					System.out.println(testDrive.space());
					break;
					
				case 8:
					System.out.println("Enter count of the front elements: ");
					int count = sc.nextInt();
					System.out.println("remove(" + count + ")");
					testDrive.remove(count);
					
				case 9:
					System.out.println("swapStart()");
					System.out.println(testDrive.swapStart());
					break;
					
				case 10:
					System.out.println("swapEnds()");
					System.out.println(testDrive.swapEnds());
					break;
					
				case 11:
					testing = false;
					break;
			}
		}
		sc.close();	
		System.out.println("End of Interactive Test Driver");
	}

}
